<?xml version="1.0"?>
<!--
  ~ soapUI, copyright (C) 2004-2008 eviware.com
  ~
  ~ soapUI is free software; you can redistribute it and/or modify it under the
  ~ terms of version 2.1 of the GNU Lesser General Public License as published by
  ~ the Free Software Foundation.
  ~
  ~ soapUI is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
  ~ even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU Lesser General Public License for more details at gnu.org.
  -->

<document>
    <properties>
        <title>userguide - soapUI REST Support</title>
    </properties>
    <body>
		<section name="REST Services in sopUI">
		<p>soapUI 2.5 introduces extensive possibilities to invoke and test REST services, either starting from a WADL
        definition or just plain URLs. The REST support is divided into two parts:</p>
            <ul>
                <li>A new REST Service / Resource / Request model in the Navigator with corresponding editor windows</li>
                <li>REST-specific TestSteps for integrating REST testing with existing test-functionality</li>
            </ul>
            <p>Mocking of REST services is currently only supported via the possibility to specify a document root
            for serving static content, an upcoming release will have full REST Service mocking functionality.</p>

            <subsection name="The REST Model">
                <p>The model for REST Services in soapUI is closely modelled after the WADL model but does not explicitely
                require a WADL definition. If a REST Services is defined "manually" (without a WADL), the corresponding
                WADL will be automatically generated and can be used for validation, code-generation, etc.</p>
                <p>REST Services consist of the following key items:</p>
                <ul>
                   <li>Services - corresponds to Interfaces for WSDL, in a WADL this corresponds to the root application
                   element. A Service contains an arbitrary number of heirarchically organized resources.</li>
                   <li>Resources - defines an addressable (URI) item that can be parameterized using a number of parameter
                   mechanisms. Resources are created/modified/deleted using standard HTTP methods (PUT,POST,GET,etc) and
                   can be made available in any number of representations (ie states), for example XML, JSON, PDF, etc. Also,
                   resource can contain child resources which will inherit parameter and path information from their
                   parent(s).</li>
                    <li>Requests -  A resource in WADL/REST is accessed through a number of Methods, which in soapUI are
                        modelled as requests. A request is defined by it's HTTP method, Headers and parameters. The
                    response is usually a representation of the invoked resource.</li>
                    <li>Parameters - can be defined on both the Resource and Request level, see more below.</li>
                    <li>Representations - are used to define the content of a request or response, see more below.</li>
                </ul>
            </subsection>

            <subsection name="WADL Support">
                <p>soapUI supports WADL in two ways:</p>
                <ol>
                    <li>When defining a new REST Service one can do so from a WADL file/URL, which will import
                    all defined resources and methods (as requests). Associated XML Schemas are also imported and
                    used for validations and form-generation in soapUI Pro</li>
                    <li>When defining a new REST Service without a WADL by just specifying ednpoint, parameters, etc manually
                    soapUI internally automatically generates a WADL from the configured items.</li>
                </ol>
                <p>In either case, the WADL can be used for code and documentation generation from the WADL Content tab
                in the WADL Service window (see below). Also, defined representations will be used to validate response messages when
                adding SchemaAssertions to REST TestRequest steps.</p>
            </subsection>

            <subsection name="Creating REST Services">
               <p>REST Services can be created in several ways.</p>
                <ul>
                    <li>From a WADL:</li>
                    <ul>
                    <li>By specifying a WADL file or URL in the New Project wizard</li>
                    <li>By selecting the "Add WADL" popup menu option from the Project popup</li>
                        </ul>

                    <li>Manually:</li>
                    <ul>
                        <li>By selecting the "Add REST Service" option in the New Project Wizard</li>
                        <li>Via the "Add REST Service" option from Project Popup</li>
                        </ul>


                </ul>

                <p>When specifying a WADL, soapUI will read the WADL and create the corresponding
                model items in the project. When creating the service manually, the following dialog will be
                shown:</p>
                
                   <p align="center"><img src="images/new-rest-service.gif"></img></p>
                <p>The following options are available:</p>
                <ul>

                    <li>Service Name (required) : an arbitrary name for the service</li>
                    <li>Service Endpoint : an initial endpoint for the service.</li>
                    <li>Extract Resource/Params : will open a dialog for defining an initial Resource and its
                    parameters from the specified endpoint.</li>
                    <li>Create Resource : if no endpoint has been specified or "Extract..." has not been selected, this
                    option will open a dialog to create an initial Resource.</li>
                </ul>

            </subsection>

		 <p><hr size="1"/>Next: <a href="services/index.html">REST Service overview</a></p>
		</section>
    </body>
</document>
