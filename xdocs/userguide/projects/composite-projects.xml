<?xml version="1.0"?>
<document>
    <properties>
        <title>Composite Projects - Collaboration based Web Service Testing</title>
    </properties>
    <body>
		<section name="Composite Projects in SoapUI Pro ">
		<p>What is a Composite Project?</p>
		<p>Behind the somewhat bewildering terminology lies a very simple concept; Composite Projects are soapUI projects saved to enable 
		Team Collaboration.</p>
		<p> Let's explain more in detail. Normally a soapUI Project is saved as one xml file. This has its advantages; you have only one file to consider and that file contains all information about that project. 
		It also has some disadvantages; collaboration and joint team test development is very hard because synchronization is very hard to do. 		
		</p>
		<p> 
		When working in a Team in a project you often come to the situation where you have one person updating one test and another person a second test. 
		If you only have one project file this is impossible to do simultaneously and hard to do by synching the test manually.</p>
		<p> 
           In comes Composite Projects; composite SoapUI projects are saved as a file system so updating, changing or committing parts of
           projects, like a TestCase, are much easier to do.
        </p>
        
        <subsection name="Composite File System">
        <p>Composite SoapUI project is saved in directory with project name. It contains separate directories for
           each interface, test suite and mock service and file settings.xml where other project settings and data
           are stored. Each interface directory contains interface settings.xml file and for each operation one xml
           file named by operation. Test suite directory contains settings.xml and one xml file for each test case 
           named by test case. Mock service directory contains settings.xml and one xml file for each mock operation
           named by mock operation.
           <p align="center"><img src="images/composite-tree.gif" alt="Composite project look"/></p>
        </p>
        </subsection>
        <subsection name="Making Project Composite">
        <p>Making SopaIU project composite is easy. In project properties there is property ,<b>Composite Project</b>
        that can be true or false. Setting it on true will make project be saved in composite form when saved. Projects 
        that have set <b>Project Password</b> can not be composite.
        <p align="center"><img src="images/composite-properties.gif" alt="Composite project properties"/></p>
        </p>
        </subsection>
        <subsection name="Composite behavior and actions">
        <p>When renaming element( interface, operation, test suite, test case, etc..) corresponding element in composite
        file system will be renamed if there is no file or directory with new name. Otherwise error message will be 
        prompted. Deleting element means removing it from file system, too. Trough submenu <b>Composite Actions</b> is 
        possible to save or reload element. For test cases is possible to export, save at designated location, or import 
        them in test suite.
        <p align="center"><img src="images/composite-import.gif" alt="Import test case"/></p>
        <p align="center"><img src="images/composite-export.gif" alt="Export test case"/></p>
        <p align="center"><img src="images/composite-actions.gif" alt="Composite actions"/></p>
        </p>
        </subsection>
		 <p><hr size="1"/>Next: <a href=" "> </a></p>
		</section>
    </body>
</document>