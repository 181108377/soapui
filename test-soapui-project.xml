<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project resourceRoot="${projectDir}" name="test" soapui-version="2.0.3" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="ProjectSettings@shadowPassword">test</con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" name="HelloWorldImplServiceSoapBinding" type="wsdl" bindingName="{http://mogul.com/}HelloWorldImplServiceSoapBinding" soapVersion="1_1" definition="http://localhost:8080/HelloWorld?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache rootPart="http://localhost:8080/HelloWorld?wsdl" type="TEXT"><con:part><con:url>http://localhost:8080/HelloWorld?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="HelloWorldImplService" targetNamespace="http://mogul.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://mogul.com/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <wsdl:types>
    <xsd:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://mogul.com/">
      <xsd:element name="sayHi" type="tns:sayHi"/>
      <xsd:complexType name="sayHi">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="arg0" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="sayHiResponse" type="tns:sayHiResponse"/>
      <xsd:complexType name="sayHiResponse">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="return" type="xsd:string"/>
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="sayHiResponse">
    <wsdl:part element="tns:sayHiResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="sayHi">
    <wsdl:part element="tns:sayHi" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="HelloWorld">
    <wsdl:operation name="sayHi">
      <wsdl:input message="tns:sayHi" name="sayHi"></wsdl:input>
      <wsdl:output message="tns:sayHiResponse" name="sayHiResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="HelloWorldImplServiceSoapBinding" type="tns:HelloWorld">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="sayHi">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="sayHi">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sayHiResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="HelloWorldImplService">
    <wsdl:port binding="tns:HelloWorldImplServiceSoapBinding" name="HelloWorldImplPort">
      <soap:address location="http://localhost:8080/HelloWorld"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/HelloWorld</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="sayHi" bindingOperationName="sayHi" type="Request-Response" outputName="sayHiResponse" inputName="sayHi" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/HelloWorld</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:mog="http://mogul.com/">
   <soapenv:Header/>
   <soapenv:Body>
      <mog:sayHi>
         <!--Optional:-->
         <arg0>?</arg0>
      </mog:sayHi>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation></con:interface><con:properties/><con:encryptedContent>VTJGc2RHVmtYMTljK2VLZEdrS3hMMnBWZjlna2RxZFBUZlhDWUE0MEZyZGdhN0FLeDBEWXU0U205TG54bG5WcwpqQXNYNHhQaWtZalFzZ1Z2RGxRY3BCdHNncWpNVXlsMnU0WTR3TkZTYzJwblFJcFdtYUc5cnhJVlZYUkhPOS9ZCjBMeGx0VVRHTjJvN2ZEUnZQWCtWRVVUWUs3eUNsSGlTMXRtRHJIdmRHanMyWWVlWWkxNjZlTmRxa3haenFyNjcKUlB6dHpYU3BkUTdBV2hDVHRvU1Q3bTAvMGdnOHl0MGpZeUt4WmY2cjNFaHd0N3d3Z2FvYXhsTm1vSHNGYzNLYgpBbnRiZlg0VlVsejRVN05kanJ3QzhERmcvTzBZbXFvVDEyaUdXbHJ1WDRyUFNVR1RwWlRSVzk5a0UrVW5mWlhYCkpZakd1NWJXQXQ2UmhmRTAyY0RMckhxNjFrL3VHREVqZnYzWjA2ZnE1TUF5UUNyc2xmdUp1dC9iMDZFV292NUYKNDAwR3dxdGtLSXk1ODNFQ3U2ZC9Tb1BPU2RUdlhZWk5yeHRJVnBjc0s2ZXpuUEF1THdvMmU5TzY3ZmlxYm9VawovWFFNTGt1THBmRWdWYTFrR1RzY2pnSlN5V2EyOUlLemcyajRwaTM2Ym1QRUhNVjRRajlQSVgrbDJON2d1QWh6Ci9wSGVqZEI5Umt4VTVJMngvemczSERZY1hkVGc5UHRMS1QrckY5bkhqRU1QekI5OXQvdEdYVTV3VzdXZzljeFYKSVBTNHJxcEppL2NMTkdLeUw2M0lUck9qajJ5TSs5YUdNMTlYLy9peFhHN2ZxYTRVYWpMVUNJdWRMVmsxRlh2VwpFRUdRWFU3YVZKNXJRU3lMdWpYZzJiTkRlQ1cycmNYSFpWay9sakFGV2R0bjBMdE83dEs2NzFnbVVtVWxxSXcxCmdhaVFxK1h2MHB2a05RM3BkK25LWnQ0K3cvZ3NiMEVBdURjZzNxVmtKMDF1dDc5VHQyUWNxaHJ1NVVsbWl5alEKcEthV1RidWtIWjVXaURWTndWYi9Gc3M5cWlTRmlVZTBBTC9scDJlc1ZWOUg1MFdwWnA4ZlVjSEFuekxtSENIdgpFNjJlb1kxbytpS1J3NU4vNU1mWmFpTDlHd0djMWhtbGwzZUtsdWNPQjdsbEU4UitiQkVsWVVUbnFLVTJyMDFCCmlTUVEzMFdkd08xNGp2ZnZ5Y1hPOU9XWXMvN05rWmliUWE4N0pvMjd0L3g4U1BtTHQwbmFlaytxaFpDRjZnTHUKSDVLTEp4UFVITHVGcU9YMUk5N3lBaGFiSjYxQUtFOXVoZTc0T0dXcEpKelFISVJkd2tyK0FKeGJ0eDEzY0lqUQpIdzcwV0xON2hlZXJIQUZZbzh4NmVhaWdNdldFWjNOaThPQ1IyZXU2MlFNZ3lrU0Y5U1FuVHFwakV5NC9YZjNPCkdUUUViZStjQUtmWStaTU5uNDA2MW0zclVrbVE3SytiV1pRL1RvWkhnbWN0R1VrY0loNExkODE1YjNtU2JlNzMKZytJN0dIS3IvR09Ebi9KRjFFSHE1Zm5pNGppVjgzdzFTaFc2eEExMEs2a3FyUGNNd24vRndSZklYWUFzNzRvRApicEZuanFSbE9UK1J3WXpNQ3NtYmVVV1QyRVZQLzdkSUJqWGIzNE4zUjdsbmtTYWFlTGV5emtlNVlWTUQ1aWVFCjNnVTBidEVKZ1J1QXJoMmo4T0xUOTRQK3lIZ3Q2RExjMGpsQWczSVJkUGpCTXFPRmZNaDd5ZHYwM1dpVU9oRmIKeWdJWWhOOXRiMnM5R1dScEx2R0RjeEg2WDNkYkVqUmR4VUtMb2Y5ektKekhFdCswUXJISUFVcWdHdXpHQW1WNQp5ck5Ec04yU0lHZ0t0RVhJSFhiODFXanUyMnlRcUw4WUlzdGNvZ1dyaFoxaUtkNFFCclNiSkcvbENSU0cyM1lECk4vT3U2ZS9ZbHEveUIyWU02RlZrSXNpd2VDSWw1UjZrWG9pNzZOMGpVczM3SDFWdnJjVk5RRUxCR001aUZhRWIKQ2dybzRLTUdpSG0yeFNrcGNialhNTzhNSDVvQU5TajBSenB5R1hQdW5EcjJBZ2x3Y0svNW1yWGpaMnVXRDE1UgpOaDVQc1JCdTRDdkh0bCs0OUtRYzc0OGZORlFDSE96ZW0rVmUvMEdoMkx1bWUyZVZWR3g2MXd3alNQNE80OTFkCkF1c0pBdlNvOHlWTFN0dGltSjJiUUN3WDUvWFZyZDRYd2t1RVZGWGJLVWRBRGo3cXJwclhpa2tSMVh4NVlkT3oKTElaZTZTZnZ0bDhkUFM0V0FrQ1Q3ZWhDUzFiZEh5ZmczV0NCZHR2WVpUYnJ4R1FGQmpzTWdqYWtEV3JyVXBKeAovRlB0M081TVFIMVltY0pVSVlrUkhCelRPSWU3QjFUSzV4Ylo0OEJUNEw0RzliNzRQTDZQUVVRNU45VkFNc29QClczc0NDd0JHQ25hVGIxMDZSdTA4QkZnTEdGOGpLajdJRVNhRmVmU21wRDVtTE1xYzdrWE5vS2JhbUd4TUtnbUcKb0ptaFBJWnRpKzZhb3FiQWdySXc5NmRDNTRNUlVhTDdIUlhYRHp3YXJVTXdpZ3RSN0NDNXcwMWo2Tm9FSkpYcwpNSVA1WU81NzdWUDdkcXFnWE9OWXFBZ0dFVEdwNHVMSTgwejY1QlQ2MFlUWEJLdHZ6cVVJdFFOMTZhSnZvVGtOCmQ2WWxTeXQ0dXdzdUpjY1NmeUJtNEV4T3JLbE9zQ3A2elcvbUN6QTBOeVpTaWtjTXpaZWxXeElIaml0QUpsWSsKVmVMMjM4SWlpdzY5bVcxa2FlQkRlcExaZUVhNzN4T082Z3RxL0lJamFJQXhFcTZpQTRZRFk3dFJyY3ZkdnY5UQpaZENlYmVsOFdzb05VTFFGYnNXT1FIOUJ1U3dqSTcxVFJFcDRyTFN3SU5JRExNZmxPNGhhYnJINmp5cHZvK1k3CnIzS2FOemprZlVlUFJwWWhuYnJYYlY4STFWa1ZqMG40QUFybjdvdldSeGkxTCsvWVVpQVVlY251REg2Q2E0YngKaHJzanVUdmxVV3V0RWs3ZzFRSUtCSGpzeTlEZmgwT0hpR0xQTUdVa1REMWZiZVFvTkRUWFRYOWhhamRQV0lWSwpvbkN2VFk5MHVHdnZRSks5aHk1dHAwa284MlBLNU5yeWRkTG8yTnRUUDJKck5JOVpPVXZ1bkJjUUtoM0E3Z1BvCm5ZT3ZDNm5QTjhiSU51ZkE1WWJqZXpTSmk3Y1k3L3lBaUJMUkNsK1VBNk5reWdJWHZqOEdGZFBUMjF0Ni9zYWQKM0c2dDdRVEFkSXpXbmpUQ0tUcWszcmxMbUdjZUxQcVZYRUhoOXRmMEFjeG8yZHJOeHJSR3kwWmM2ZEdFUmNCWgpRbWZ5UVcyc1hwc2lLSzkycGFrbEF2enYwTSs0RkZra2NlTGtLU0lMSWhGZUUrSTN0My9qdHZBa0h2bkR1dXZoClEwM0YzVjZMWlJsLzdEbW53N3FPaC8vUHUvejlnVVkrQXlJdzNPRUdwY0xCMHNMZnd1dVRPam5vZW9XeVIyc1MKbElmbkEvbVcrMGVDY0hyclVqZGtGYnZHRjlTOE0xVHA0VGVtSDNSVEpqbWZEaDc0dFpyL3BzN281NEF2cFJxRQpyL1ZqdnpVekhDMmo1V0FZOGJmOHAxd01KdmdLS1RJYTJzbFQ4K0o1K29Mc3BtN3g2cFdUUTI4NGRUREFJUDE1ClJ3dXFKU2hVVUNJd3lyd1RWbjlHemEvSVJxRjVob1B4K2pqQjhOL0Qyakg4UGJkd3R5cDU4WENiL2lWdkwrSDQKSXhRbnR5Q29VQlUzdnE4KzNwM0ZVNWwrZ0c0NGVjTkJqcWppaFg1UTl3ZjRMQjByZjc5ZkZwV3FTOUR3akkrTAp3L3Noell6OWtheXNJMTZneTdRaEV0cVZmdnd1YjlPZVhWVlJ3Uk1EODA4bEo0Z1ZCa2gxVEdBTkJMQ25jcUV2Cm5qMXpna0NXZEJrb0k0aFFUaTRHS3p0SG12NEhCNm9wRU5hYzhLVFovbUJVZXRNNUdxb1k5bkxrN3liQ2VSMisKalBqTGxIc1hJbGdWWnY3T1ZTMDJZakxKOUFBaGJrQUk4TnhScXhhT2cvZWYxUGpTRDkvcTRrT2lIUVdFeVVuNAo2WGhRSzZEeDVBdkQ1dXd4NDZZNG4zLzhmTk1TZFhrSytJSjkvajJYajVMZm1wRUNaRmxqR1VkM1NyMTBnOFZXCnZVdkxJUEUvdWF4TEI2Y1NtZ21rakFONEN1ZlQxbHAwRGtpVThaUG5wMEVXckZhbkl6K1hEVWRrblZHM0ZxR28KS0FUTGp1UHFIK2RUOHN0OXY5cWowVm5GU0VLRllEN0x2RDBBRW1JRDBCV3ZOTVpZang5TTZsSTU5SENQREN5TgpEVWhySkdTdU5YZXR4S25vTFVyYzBSVnJWT1htakcyL2l5VitlaHovMnJxaC9TSEhrMHRwMTNHdTRBcnJXbURkCmtialVMYjZnZUFSaEFjZXorYTNreEtZNzl5V2d6cWoyMHpydHJ4YnRPTGxPM0hFbTUzN2N0ZzI2azE3aHY0eXgKUjJySHdadnhZYkFWRkNIQ1d4aFRnb1BkRHdDNHF4ZzFab1hYN0VEYnlYcnRJTGs1aGFsazRyR2Zyblg4bmhSdApzQ2NkY1U3SCtHRWlYYWJOKzFKMmNheHh5bnNBRU43dll1bCtFRVhmR2d0ckRKMFJQT25RNFRZMmM3MVV3anBLClR5WTYzeHY1ZkljMXc2TU1CMlZsSElJbC9hd0prUWNTNGVudmRoVGV4Y3g2aDVrKzZXZVkyZE5VeVQyM2F5V0kKMzdXWnlJeVJXbmJOWlcvRVBUY1BvZ3cxdTVROWczaTUvOHBBaUZXVnVJK0VCc1BBTC9LODQvVUhHU1FUU21SeQpiME1uNzl5cHJZblJFRU9lZGNUM2JJUFdHQ2RCYUczQzA4SEpTTkZzWUQ3dzJHMXVWTHVDeG41LzJnNzhXZXNrCmNzSnRmWW9yNW1YZnBjb3pNOWFvekRrOEdiYlpHWVAwaDh3SEVCcUxDc3VhTXZUa2UxdkN4RVMyamFwdUhKUDgKQ0ZrY2xHNmZISHVqdjBjZ1liSndqYUNiQUh2aWV3ZlFtRGJ2Mnl6bDVoYTViek1tZGFSZ3FYejhsVWpseVpMTAppR1NSN2tWVGo0TkhZZHlHbllaYk84R0JFM0pPdHJldTRjTnBDdm9OTFlJenpnck1OanQzNUVzd0dwbFNES0RmCno1d2dQZndYN3MwZEVqeStOdUw5Q1dTWVVDWXV0eUJ1ZXorOUhPV2RMZDRaUUZzRGNxdm00RE1VdEhvblJJQ3gKR3pKcEY5UEsyMEdmN3ZEWEJsTGwyYkFVaEtNZnd5WkQwTTdTcjFWaUw4ZGxsT2poZUtKamkwdUdGd2Q5elJXTApoR0VGQkxmWENZMzNCZkFHYVZMREwrVXVrck5lZWY3cE5ucng2VWZXU3crQVVYRmZGcUhDZlB3ZjlHZWV0ZXA0CjF6SnBDRFdaSllWU0J2dUVtY0l0YnVuTWdJUW1UNlZmcUxoYzZiNkQ3azR5WTVKZ245YVpULzErNzRIZWtoODUKRVNmbnh2dDNxaEluQkl4SnhkeFRqNFkvSlFvWTBaNW5wc3l6b0RrTFV5RzFWTVNVNEpDRENZdStSb2UrTkpodwpoZkJMay9ObC9HaGMwSTh4cTF6c0x4ZmQ1SEgvYUxIb20vdis2K3drZm1IYm54RFNMdkhyczJTeVNmVXRsbUlqClhDamdKUU1lWjVPUUxTajZIY3FtOWJUYzhjbExFTHJEQVN0RFN0TWdDcFR2TWZjb2JTdklDMkFJMmFNV0ZWWDUKaVhOTzQ4YzhBN2hIbndYNFd3QkRSYW42YmZNeUsrd1lBS0l3a0k3SCtlZG55eTZJWVlmSEhTZTFvcUFTUHFmWQpka2czVGxLYlY3UldHSlRiK3dML0U4aDlKRmt1NllWRm9najVUWFB0dzNWVUdqTTkvTWV2UmFrTWlVTWo4OHdKCjUyMjIwbXhWNTVFVmRTckp3YXQxaStoSnJEckF2bkt3Q1lUWGtFWTZqRXVteG9MTnp5STIyd3VuMVdjd1ZyRHoKdUp5b3VBOUtNUU16TmJSaTJXWEQ3VUVMN1lwYUVBbDhHSzNDc05BTWVLUXFVUThuOXY3cnMvemVBVEJLejNLNgpiRVhieGlxUkFkNkt1dDc2ZDZNWjJlbldFQThQQUtUa2dsVThPS25FMTFaSTdKNGo5a0JhMzI3VU03M2hia3kwCkNkY210SFRLVC81WEtQZUFaTGZGYkRBWjlDdFIxeis4Nk9LVjM3aHhKdmcxUnBxWGE3TWMvYXR1RlBFNGNkVGYKZVhGcG9xczJrK242Q0lWb0pBMFJPemRVRklMVm5kUDdjZE03ajZSNVFUTGZraVhFRmlNalMvOEZEWGVXSHF5dwpxTWU3b1AxZW0vR0pkOExjbERaeldVUlZyVjNlc29kMy9PMEdXdU80aUdDbDIvNXc1Vkk1VGFMNEV0aWhjR2dRCld4MVBWbVZpazRKQ1RYYTRNN3owbFZza3NKUEhBS1RYWXcxR1JtV2VDNXZ3czArRXUxaGJQbFBlbGNtOTJPVTEKRkFjRjExVmdJY2JkYytSSXl4aVdib3orMmFzMzB0c0lPdlhKZTNqNFdNV2dCbUUzWFR6WkdmQThQdGNKcWZ5OQppeGVuTDBLUGsvZllqWkFqdDhJRHlvdTl1NGFGSkdadjF4WXhzTFp1WU8xN0FpUjBRL2RiSTlTTGtlK1FHTnRtClV5eEdjTlM3QURvWVJBS2c1KzFYblJhQ2dDV2paaklpaTMwUC9QTSt0Mi9laHh2aXFOck90ZGk3bVdEOFd6cWIKM0tnZ0VHZ0crRUVRaDdmNUhZYk5rVGVvVFloblkwRkYzOW0yQWRscWRrdDFDV3YvejIvSEh6YnhqZDFYYU9tWgpqQXU5SU1EV3pReUhjUmdOc28wcG1kWmJNWDM3MVM5OXhFVWoxVlBndFo4S1Q5UWlQR1FSejV3QmwyVkF0VFp5CjRNcTVSVXl4SlZkVUc3SGFtV0UzVmswejBuK3VIK05aMlVNdFhQMU0rcVdwTFhpSS8rOThNcHVlRDJVWWd1NDUKVGdnQU9YVEVpTHNXM3pvUU9pSEI3VERjblJUbmxUZ0ovVnNiL3F4cVBGdEd0SDhuTVo5ckZxMXlQRisxV2Z0SApIMnAyaG9xSHBVOD0K</con:encryptedContent><con:wssContainer/></con:soapui-project>